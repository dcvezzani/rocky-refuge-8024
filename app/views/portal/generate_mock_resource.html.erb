<style type="text/css">
  #resource-generator textarea{
    width: 100%;
    height: 10em;
  }
  #resource-generator label{
    color: white; 
  }
</style>

<%= form_for :generator, html: {class: "form-horizontal", id: "resource-generator"} do |f| %>
  <div class="row">
    <div class="span6">
      <div class="control-group">
        <%= label :resource_name, :resource_name, class: "control-label" %>
        <div class="controls">
          <%= text_field_tag :resource_name %>
        </div>
      </div>
      <div class="control-group">
      <%= label :resource_target_names, :resource_target_names, class: "control-label" %>
        <div class="controls">
          <%= text_area_tag :resource_target_names %>
        </div>
      </div>
    </div>
    <div class="span1">
    </div>
    <div class="span5">
      <%= label :use, :dark_border, class: "checkbox" do %>
        <%= check_box_tag :use_dark_border %> Use dark border?
      <% end %>
    </div>
  </div>

  <%= f.submit "Generate" %>

  <div class="row">
  <div class="span12">
    <div class="control-group">
    <textarea id="console_out" name="" rows="10" ></textarea>
    </div>
  </div>
  </div>
<% end %>

<div id="work" style="display: none; "></div>

<script type="text/template" id="resource-decl">
<style type="text/css">
#resource-target-decl{ }
</style>

<ul class="hotspot-enabled" data-title="#{resource_name}">
  <%%= image_tag "/assets/mock/#{resource_name}.png" %>
</ul>
</script>

<script type="text/template" id="resource-target-decl">
  <li data-id="#{resource_target_name}" data-mode="new" data-dark-border="#{use_dark_border}">
    <%%= #{resource_target_name_underscore}_path %>
  </li>
</script>

<script type="text/template" id="resource-target-file">
./app/views/portal/#{resource_target_name_underscore}.html.erb
</script>

<script type="text/template" id="resource-target-route">
  get "portal/#{resource_target_name_underscore}", as: :#{resource_target_name_underscore}
</script>


<script type="text/javascript">
function generate_resource(resource_name, resource_target_names, options){
  options["use_dark_border"] = (options.use_dark_border == true);

  var resource_decl = $("#resource-decl").html().replace(/\#\{resource_name\}/g, resource_name);
  $("#work").html(resource_decl);

  var target_routes = [];
  var resource_name_underscore = resource_name.replace(/-/g, "_");
  var target_route = $("#resource-target-route").html().replace(/\#\{resource_target_name_underscore\}/g, resource_name_underscore);
  target_routes[target_routes.length] = target_route.match(/[^\r\n]+/)[0];

  var target_files = [];
  var target_file = $("#resource-target-file").html().replace(/\#\{resource_target_name_underscore\}/g, resource_name_underscore);
  target_files[target_files.length] = target_file.match(/[^\r\n]+/)[0];
  
  console.log("resource_target_names: " + resource_target_names);
  $(resource_target_names).each(function(i, resource_target_name){
    console.log("resource_target_name: " + resource_target_name);
    resource_target_name_underscore = resource_target_name.replace(/-/g, "_");
    var resource_target_decl = $("#resource-target-decl").html().replace(/\#\{resource_target_name\}/g, resource_target_name).replace(/\#\{resource_target_name_underscore\}/g, resource_target_name_underscore).replace(/\#\{use_dark_border\}/g, options.use_dark_border); 
    $("#work ul").append(resource_target_decl);

    var target_route = $("#resource-target-route").html().replace(/\#\{resource_target_name_underscore\}/g, resource_target_name_underscore);
    target_routes[target_routes.length] = target_route.match(/[^\r\n]+/)[0];

    var target_file = $("#resource-target-file").html().replace(/\#\{resource_target_name_underscore\}/g, resource_target_name_underscore);
    target_files[target_files.length] = target_file.match(/[^\r\n]+/)[0];
  });


  var target_routes_block = "<%%# \nTarget Routes\n" + target_routes.join("\n") + "\n%>"
  var target_files_block = "<%%# \nTarget Files\nmvim -p " + target_files.join(" ") + "\n%>"

  $("#console_out").val(
                         ($("#console_out").val() + $("#work").html() +
                           "\n" + target_routes_block + "\n" +
                           "\n" + target_files_block + "\n"
                         ).replace(/\&lt;/g, "<").replace(/\&gt;/g, ">")
                       );
}

$(document).ready(function(){
  $("#resource-generator").submit(function(e){
    var resource_name = $("#resource_name", this).val();
    var resource_target_names = $("#resource_target_names", this).val().split(/[\r\n]+/);
    var use_dark_border = $("#use_dark_border").is(":checked");
    $("#console_out").val("");

    generate_resource(resource_name, resource_target_names, {use_dark_border: use_dark_border});

    for(var i=0; i<resource_target_names.length; i++){
      generate_resource(resource_target_names[i], ["asdf"], {use_dark_border: use_dark_border});
    }
    return false;
  });
});
</script>
